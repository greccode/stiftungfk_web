@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<head>
    <style>
        /* Ihre bestehenden Stile */
        .form-control:focus {
            outline: 2px solid red;
            box-shadow: 0 0 0 0.25rem pink;
        }

        a {
            color: red;
        }

        .btn-custom {
            background-color: black;
            color: white;
            transition: background-color 0.3s ease;
        }

            .btn-custom:hover {
                background-color: red;
                color: white;
            }

        /* Neue Stile für die Zitat-Animation */
        .row {
            display: flex;
            margin-right: 0;
        }

        .login-column {
            flex: 0 0 auto;
            width: 33.333%;
            padding-right: 15px;
        }

        .quote-column {
            flex: 1;
            padding-left: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: white;
            overflow: hidden;
        }

        .quote-container {
            text-align: center;
            font-family: 'Georgia', serif;
            max-width: 80%;
        }

        .quote {
            font-size: 24px;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 1s ease-in-out, transform 1s ease-in-out;
        }

        .author {
            font-style: italic;
            margin-top: 10px;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 1s ease-in-out, transform 1s ease-in-out;
            transition-delay: 0.5s;
        }
    </style>
</head>

<body>
<div class="row">
    <div class="login-column">
        <section>
            <form id="account" method="post">
                <h2>Use a local account to log in.</h2>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label asp-for="Input.Email" class="form-label">Email</label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label asp-for="Input.Password" class="form-label">Password</label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="checkbox mb-3">
                    <label asp-for="Input.RememberMe" class="form-label">
                        <input class="form-check-input" asp-for="Input.RememberMe" />
                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                    </label>
                </div>
                <div>
                    <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-custom">Log in</button>
                </div>
                <div>
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p>
                    <p>
                        <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
        <div class="quote-column">
            <div class="quote-container">
                <p class="quote" id="quote"></p>
                <p class="author" id="author"></p>
            </div>
        </div>
    </div>
</body>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const quotes = [
            { text: "Jeder Künstler war zuerst ein Amateur.", author: "Ralph Waldo Emerson" },
            { text: "Kunst wäscht den Staub des Alltags von der Seele.", author: "Pablo Picasso" },
            { text: "Kreativität braucht Mut.", author: "Henri Matisse" },
            { text: "Ich träume meine Malerei und male dann meinen Traum.", author: "Vincent van Gogh" },
            { text: "Die Aufgabe der Kunst ist es, das Wesentliche sichtbar zu machen.", author: "Aristoteles" },
            { text: "Kunst ist eine Lüge, die uns die Wahrheit erkennen lässt.", author: "Pablo Picasso" },
            { text: "Jedes Kind ist ein Künstler. Das Problem ist, ein Künstler zu bleiben, wenn man erwachsen wird.", author: "Pablo Picasso" },
            { text: "Ich habe keine besondere Begabung, sondern bin nur leidenschaftlich neugierig.", author: "Albert Einstein" },
            { text: "Die Kunst ist eine Vermittlerin des Unaussprechlichen.", author: "Johann Wolfgang von Goethe" },
            { text: "Kunst ist nicht das, was du siehst, sondern was du andere sehen lässt.", author: "Edgar Degas" }
        ];

        const quoteElement = document.getElementById('quote');
        const authorElement = document.getElementById('author');

        function showQuote(quote) {
            quoteElement.textContent = `"${quote.text}"`;
            authorElement.textContent = `- ${quote.author}`;

            quoteElement.style.opacity = '1';
            quoteElement.style.transform = 'translateY(0)';

            setTimeout(() => {
                authorElement.style.opacity = '1';
                authorElement.style.transform = 'translateY(0)';
            }, 500);
        }

        function hideQuote() {
            quoteElement.style.opacity = '0';
            quoteElement.style.transform = 'translateY(20px)';
            authorElement.style.opacity = '0';
            authorElement.style.transform = 'translateY(20px)';
        }

        function changeQuote() {
            hideQuote();
            setTimeout(() => {
                const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];
                showQuote(randomQuote);
            }, 1000);
        }

        changeQuote(); // Initial quote
        setInterval(changeQuote, 10000); // Change quote every 10 seconds
    </script>
}